\ wordkey-graph.fs

REQUIRE ffl/hct.fs
REQUIRE group-dictionary.fs
REQUIRE wordkey.fs

25000 CONSTANT WORDKEY-GRAPH-SIZE
WORDKEY-GRAPH-SIZE HCT-CREATE WORDKEY-GRAPH

: ADD-START-WORD ( add,l -- )
    0 -ROT WORDKEY-GRAPH HCT-INSERT ;

: PREDECESSOR@>S ( add,l,dest -- )
    -ROT WORDKEY-GRAPH HCT-GET
    0= IF S" unknown word" EXCEPTION THROW THEN
    SWAP WORDKEY>S ;

: ADD-ADJACENT-WORDS ( add,l,add,l -- )
    2SWAP S>WORDKEY -ROT WORDKEY-GRAPH HCT-INSERT ;

: .WORD-PATH ( add,l -- )
    BEGIN
        2DUP TYPE SPACE
        PAD PREDECESSOR@>S
        PAD COUNT DUP
    WHILE
    REPEAT 2DROP ;

QUEUE VISIT-QUEUE

: CLEAR-VISIT-QUEUE ( -- )
    VISIT-QUEUE Q-EMPTY ; 
    
: ADD-TO-VISIT ( add,l -- )
    S>WORDKEY VISIT-QUEUE Q-APPEND ;

CREATE SEARCH-BUFFER CELL ALLOT
CREATE GROUP-BUFFER CELL ALLOT
CREATE LETTERS-BUFFER 100 ALLOT
CREATE ADJACENT-BUFFER CELL ALLOT

: .CONTROL
    SEARCH-BUFFER 8 DUMP
    GROUP-BUFFER 8 DUMP
    ADJACENT-BUFFER 8 DUMP 
    KEY DROP ;

: SEARCH-ADJACENT-WORDS! ( -- )
    VISIT-QUEUE Q-POP
    SEARCH-BUFFER WORDKEY>S 
    SEARCH-BUFFER COUNT DUP 0 ?DO
        2DUP I GROUP-BUFFER S>GROUP
        GROUP-BUFFER COUNT GROUP-LETTERS
        LETTERS-BUFFER LETTER-SET>S
        LETTERS-BUFFER COUNT OVER + SWAP ?DO
            GROUP-BUFFER COUNT I C@
            ADJACENT-BUFFER GROUP-CHAR>S
            ADJACENT-BUFFER COUNT
            SEARCH-BUFFER COUNT 2SWAP
            2OVER 2OVER COMPARE IF 
                ADD-ADJACENT-WORDS 
                ADJACENT-BUFFER COUNT 
                S>WORDKEY VISIT-QUEUE Q-APPEND
            ELSE
                2DROP 2DROP
            THEN
        LOOP
    LOOP 2DROP ;
